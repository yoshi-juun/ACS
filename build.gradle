// Apply the java-library plugin to add support for Java Library
buildscript {
    repositories {
        mavenCentral()
        jcenter()
        gradlePluginPortal()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.7.0'
        classpath "mysql:mysql-connector-java:8.0.15" // mysql8系
    }
}

plugins {
    id 'java-library'
    id 'java'
    id 'eclipse'
    id 'war'
    id "com.avast.gradle.docker-compose" version "0.13.4"
    id 'com.palantir.docker' version '0.36.0'
}
apply plugin: 'com.bmuschko.tomcat'

// versionの指定
ext {
    tomcatVersion = '9.0.10'
    mySQLVersion = '8.0.15'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    sourceCompatibility = '11'
    targetCompatibility = '11'
}

// In this section you declare where to find the dependencies of your project
repositories {
    mavenCentral()
}

dependencies {
    //tomcat & サーブレットの設定
    providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
    providedCompile group: 'javax.servlet.jsp', name: 'javax.servlet.jsp-api', version: '2.3.1'

    // tomcat
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
        "org.apache.tomcat.embed:tomcat-embed-logging-juli:9.0.0.M6",
        "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"

    // MySQL
    implementation "mysql:mysql-connector-java:$mySQLVersion"
    implementation('com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.8.5')
    implementation('com.fasterxml.jackson.core:jackson-core:2.8.5')
    implementation('com.fasterxml.jackson.core:jackson-databind:2.8.5')
}

tomcat() {
    stopPort = 8888
    httpProtocol = 'org.apache.coyote.http11.Http11Nio2Protocol'
    ajpProtocol = 'org.apache.coyote.ajp.AjpNio2Protocol'
    // プロジェクト名(コンテキストパス)
    // http://localhost:8080/acs の場合
    if( project.hasProperty('environment') ){
        contextPath = "${project.environment}"
    } else {
        contextPath = 'acs'
    }
}

// 参考：https://github.com/avast/gradle-docker-compose-plugin
dockerCompose {
    if(project.hasProperty('environment')){
        useComposeFiles = ["docker/${project.environment}/docker-compose.yml"]
        upAdditionalArgs = ['--remove-orphans']
    }
}
